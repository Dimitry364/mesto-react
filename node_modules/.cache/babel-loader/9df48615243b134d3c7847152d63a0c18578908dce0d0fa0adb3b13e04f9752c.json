{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n  getInitialData() {\n    return Promise.all([this.getUser(), this.getInitialCards()]);\n  }\n  getUser() {\n    return this._request(this._baseUrl + \"/users/me\", {\n      method: \"GET\",\n      headers: this._headers\n    });\n  }\n  setUser({\n    name,\n    about\n  }) {\n    return this._request(this._baseUrl + \"/users/me\", {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    });\n  }\n  updateAvatar(data) {\n    return this._request(this._baseUrl + \"/users/me/avatar\", {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatarSrc\n      })\n    });\n  }\n  addCard({\n    name,\n    link\n  }) {\n    return this._request(this._baseUrl + \"/cards\", {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    });\n  }\n  likeCard(id, isLiked) {\n    return this._request(this._baseUrl + \"/cards/likes/\" + id, {\n      method: isLiked ? \"DELETE\" : \"PUT\",\n      headers: this._headers\n    });\n  }\n  deleteCard(data) {\n    return this._request(this._baseUrl + `/cards/${data._id}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    });\n  }\n  getInitialCards() {\n    return this._request(this._baseUrl + \"/cards\", {\n      method: \"GET\",\n      headers: this._headers\n    });\n  }\n  _request(url, options) {\n    return fetch(url, options).then(this._checkResponse);\n  }\n  _checkResponse(res) {\n    if (res.ok) return res.json();\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n}\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-77\",\n  headers: {\n    authorization: \"1a5c2685-c177-4bf1-8fad-293b36b650f1\",\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","options","_baseUrl","baseUrl","_headers","headers","getInitialData","Promise","all","getUser","getInitialCards","_request","method","setUser","name","about","body","JSON","stringify","updateAvatar","data","avatar","avatarSrc","addCard","link","likeCard","id","isLiked","deleteCard","_id","url","fetch","then","_checkResponse","res","ok","json","reject","status","api","authorization"],"sources":["C:/Users/Dmitry364/Desktop/dev/mesto-react/mesto-react/src/utils/Api.js"],"sourcesContent":["class Api {\r\n  constructor(options) {\r\n    this._baseUrl = options.baseUrl;\r\n    this._headers = options.headers;\r\n  }\r\n\r\n  getInitialData() {\r\n    return Promise.all([this.getUser(), this.getInitialCards()]);\r\n  }\r\n\r\n  getUser() {\r\n    return this._request(this._baseUrl + \"/users/me\", {\r\n      method: \"GET\",\r\n      headers: this._headers,\r\n    });\r\n  }\r\n\r\n  setUser({ name, about }) {\r\n    return this._request(this._baseUrl + \"/users/me\", {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: name,\r\n        about: about,\r\n      }),\r\n    });\r\n  }\r\n\r\n  updateAvatar(data) {\r\n    return this._request(this._baseUrl + \"/users/me/avatar\", {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar: data.avatarSrc\r\n      }),\r\n    });\r\n  }\r\n\r\n  addCard({ name, link }) {\r\n    return this._request(this._baseUrl + \"/cards\", {\r\n      method: \"POST\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: name,\r\n        link: link,\r\n      }),\r\n    });\r\n  }\r\n\r\n  likeCard(id, isLiked) {\r\n    return this._request(this._baseUrl + \"/cards/likes/\" + id, {\r\n      method: isLiked ? \"DELETE\" : \"PUT\",\r\n      headers: this._headers,\r\n    });\r\n  }\r\n\r\n  deleteCard(data) {\r\n    return this._request(this._baseUrl + `/cards/${data._id}`, {\r\n      method: \"DELETE\",\r\n      headers: this._headers,\r\n    });\r\n  }\r\n\r\n  getInitialCards() {\r\n    return this._request(this._baseUrl + \"/cards\", {\r\n      method: \"GET\",\r\n      headers: this._headers,\r\n    });\r\n  }\r\n\r\n  _request(url, options) {\r\n    return fetch(url, options).then(this._checkResponse);\r\n  }\r\n\r\n  _checkResponse(res) {\r\n    if (res.ok) return res.json();\r\n\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  }\r\n}\r\n\r\nconst api = new Api({\r\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-77\",\r\n  headers: {\r\n    authorization: \"1a5c2685-c177-4bf1-8fad-293b36b650f1\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\nexport default api;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}